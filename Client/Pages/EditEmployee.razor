@page "/editemployee/{id}"
@using Microsoft.AspNetCore.SignalR.Client
@using BlazorCRUDSingalR.Shared

@inject HttpClient Http
@inject NavigationManager NavigationManager
<h3>Edit Employee</h3>
<hr />


<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="EmpName" class="control-label">Name</label>
                <input form="EmpName" class="form-control" @bind="@emp.EmpName" />
            </div>
            <div class="form-group">
                <label for="Designation" class="control-label">Name</label>
                <input form="Designation" class="form-control" @bind="@emp.Designation" />
            </div>
            <div class="form-group">
                <label for="Department" class="control-label">Name</label>
                <input form="Department" class="form-control" @bind="@emp.Department" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-success" @onclick="@UpdateEmployee" value="Update" />
                <input type="button" class="btn btn-danger" @onclick="@Cancel" value="Cancel" />

            </div>
        </div>
    </div>
</form>

@code {
	EmployeeInfo emp = new EmployeeInfo();
	private HubConnection hubConnection;


	[Parameter]
	public string id { get; set; }

	protected override async Task OnInitializedAsync()
	{
		emp = await Http.GetJsonAsync<EmployeeInfo>("api/EmployeeInfoes/" + id);

		hubConnection = new HubConnectionBuilder()
		 .WithUrl(NavigationManager.ToAbsoluteUri("/EmployeeHub"))
		 .Build();

		await hubConnection.StartAsync();
	}

	public bool IsConnected =>
		hubConnection.State == HubConnectionState.Connected;

	public async Task UpdateEmployee()
	{
		await Http.PutJsonAsync("api/EmployeeInfoes/"+id, emp);
		if (IsConnected) await SendMessage();
		NavigationManager.NavigateTo("employeeList");
	}

	Task SendMessage() => hubConnection.SendAsync("SendMessage");

	void Cancel()
	{
		NavigationManager.NavigateTo("employeeList");
	}

	public void Dispose()
	{
		_ = hubConnection.DisposeAsync();
	}
}
